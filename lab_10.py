#№10 Слиянием

from random import randint

def merge_sort(A):
    if len(A) <= 1:
        return A                            # если длина посл-ти <=1, не нуждается в сортировке
    left = merge_sort(A[:len(A) // 2])      # делим посл-ть на 2 части, рекурсивно передаем каждую часть в функцию, т.о.делим каждую часть на пополам пока не останется
    right = merge_sort(A[len(A) // 2:])     # по одному элементу в каждой части, т.о. нижеследующий алгоритм проделывается последовательно с каждой парой чисел и тд
    l = r = i = 0
    while l < len(left) and r < len(right):
        if left[l] <= right[r]:             # если число левой части меньше числа правой
            A[i] = left[l]                  # ставим число из левой части в начало посл-ти
            l += 1
        else:
            A[i] = right[r]                 # иначе ставим число из правой части в начало посл-ти
            r += 1
        i += 1
    while l < len(left):                    # пока не дошли до конца левой части
        A[i] = left[l]                      # добавляем остальные числа в посл-ть
        i += 1
        l += 1
    while r < len(right):                   # то же с правой частью
        A[i] = right[r]
        i += 1
        r += 1
    return A

#создаем случайную последовательность
x = int(input("Введите размер списка \n"))
nums = [randint(1, 100) for i in range(0, x)]
print(*nums)

merge_sort(nums)

print(*nums)